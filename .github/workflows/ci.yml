name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

permissions:
  contents: read
  statuses: write
  checks: write
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Install
        run: pnpm install

      - name: Lint
        run: pnpm lint

  theme-check:
    name: Theme Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Theme Check
        uses: shopify/theme-check-action@v2
        with:
          token: ${{ github.token }}

lhci:
  name: Lighthouse
  runs-on: ubuntu-latest
  needs: [lint, theme-check]
  timeout-minutes: 30
  steps:
    - uses: actions/checkout@v4
    
    # Instalar dependências e buildar
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 7

    - name: Set node
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: pnpm

    - name: Install and build
      run: |
        pnpm install
        pnpm run build
    
    # Fix para ES Modules - solução direta
    - name: Prepare for Lighthouse
      run: |
        # Criar arquivo de configuração CommonJS
        echo 'module.exports = { ci: { collect: { numberOfRuns: 1 }, upload: { target: "temporary-public-storage" } } };' > .lighthouserc.cjs
        
        # Backup e modificar package.json temporariamente
        cp package.json package.json.bak
        sed -i 's/"type": "module",//g' package.json
        
        # Remover arquivos problemáticos
        rm -f setPreviewCookies.js .lighthouserc.js
    
    - name: Lighthouse CI
      uses: shopify/lighthouse-ci-action@v1
      with:
        store: ${{ secrets.SHOP_STORE }}
        access_token: ${{ secrets.SHOP_ACCESS_TOKEN }}
        password: ${{ secrets.SHOP_PASSWORD }}
        lhci_github_app_token: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
    # Restaurar package.json
    - name: Cleanup
      if: always()
      run: mv package.json.bak package.json