name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Set node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: pnpm

      - name: Install
        run: pnpm install

      - name: Lint
        run: pnpm lint


  theme-check:
    name: Theme Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Theme Check
        uses: shopify/theme-check-action@v2
        with:
          token: ${{ github.token }}


lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    needs: [lint, theme-check]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build theme
        run: pnpm run build

      - name: Prepare Lighthouse environment
        run: |
          # Criar configuração Lighthouse em CommonJS
          cat > .lighthouserc.cjs << 'EOF'
          module.exports = {
            ci: {
              collect: {
                numberOfRuns: 2,
                settings: {
                  chromeFlags: '--no-sandbox --disable-dev-shm-usage'
                }
              },
              upload: {
                target: 'temporary-public-storage'
              },
              assert: {
                assertions: {
                  'categories:performance': ['warn', { minScore: 0.75 }],
                  'categories:accessibility': ['warn', { minScore: 0.90 }],
                  'categories:best-practices': ['warn', { minScore: 0.80 }],
                  'categories:seo': ['warn', { minScore: 0.85 }]
                }
              }
            }
          };
          EOF
          
          # Backup e modificar package.json temporariamente
          cp package.json package.json.bak
          sed -i 's/"type": "module",//g' package.json
          
          # Remover arquivos problemáticos
          rm -f setPreviewCookies.js .lighthouserc.js

      - name: Lighthouse CI
        uses: shopify/lighthouse-ci-action@v1
        with:
          store: ${{ secrets.SHOP_STORE }}
          access_token: ${{ secrets.SHOP_ACCESS_TOKEN }}
          password: ${{ secrets.SHOP_PASSWORD }}
          lhci_github_app_token: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Cleanup
        if: always()
        run: |
          # Restaurar package.json original
          if [ -f "package.json.bak" ]; then
            mv package.json.bak package.json
          fi